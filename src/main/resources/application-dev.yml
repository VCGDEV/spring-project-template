# Security Constraints
security:
  oauth2:
    authorization:
      check-token-access: isAuthenticated()
    resource:
        tokenInfoUri: ${OAUTH_TOKEN_URI:http://localhost:8080/v1/ms-services/security/oauth/check_token/}
        token-type: bearer
    client:
      client-id: ${OAUTH_CLIENT_ID:client-internal-sec-sso}
      client-secret: ${OAUTH_CLIENT_SECRET:my-pwd-test}      
      scope: read
      access-token-uri: ${OAUTH_TOKEN_URI:http://localhost:8080/v1/ms-services/security/oauth/token}
      client-authentication-scheme: header
      grant-type: client-credentials


# Database Configurations
spring:
    security:
      oauth2:
        client:
          registration:
            vcgdev:
              authorization-grant-type: client_credentials
              client-id: client-internal-sec-sso
              client-secret: my-pwd-test
          provider:
            vcgdev:
              token-uri: http://localhost:8080/v1/ms-services/security/oauth/check_token/
              authorization-uri: http://localhost:8080/v1/ms-services/security/oauth/token
          
                      
    datasource:
        platform: postgres
        url: ${DS_DB_URL:jdbc:postgresql://localhost:5432/example}
        username: ${DS_USERNAME:example-usr}
        password: ${DS_PWD:example-pwd}
        driver-class-name: org.postgresql.Driver
    jpa:
        hibernate:
            ddl-auto: none
            naming:
                implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl                
        show-sql: true
        generate-ddl: true
        properties:
            hibernate:
                dialect: org.hibernate.dialect.PostgreSQLDialect
                format_sql: true
                default_schema: ${DS_SCHEMA:test_schema}

com:
    vcgdev:
        crypto:
            pwd: test-pwd
            saltString: salt-test
            ivSpec: ZNJpc2QM76o+DrCWowWPtw==
logging:
  level:
    '[org.springframework.security]': TRACE